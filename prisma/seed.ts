import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Seeding database...');

  // Seed categories
  const categories = [
    { nameBg: '–ê–ª–∫–æ—Ö–æ–ª', nameEn: 'Alcohol', nameDe: 'Alkohol', slug: 'alcohol', order: 1 },
    { nameBg: '–ö–∞—Ñ–µ Costa', nameEn: 'Costa Coffee', nameDe: 'Costa Kaffee', slug: 'costa-coffee', order: 2 },
    { nameBg: '–ö–∞—Ñ–µ Richard', nameEn: 'Richard Coffee', nameDe: 'Richard Kaffee', slug: 'richard-coffee', order: 3 },
    { nameBg: '–¢–æ–ø–ª–∏ –ù–∞–ø–∏—Ç–∫–∏', nameEn: 'Hot Drinks', nameDe: 'Hei√üe Getr√§nke', slug: 'hot-drinks', order: 4 },
    { nameBg: '–°—Ç—É–¥–µ–Ω–∏ –ù–∞–ø–∏—Ç–∫–∏', nameEn: 'Cold Drinks', nameDe: 'Kalte Getr√§nke', slug: 'cold-drinks', order: 5 },
    { nameBg: '–§—Ä–µ—à', nameEn: 'Fresh Juices', nameDe: 'Frische S√§fte', slug: 'fresh-juices', order: 6 },
    { nameBg: '–ë–µ–∑–∞–ª–∫–æ—Ö–æ–ª–Ω–∏', nameEn: 'Soft Drinks', nameDe: 'Erfrischungsgetr√§nke', slug: 'soft-drinks', order: 7 },
    { nameBg: '–õ–∏–º–æ–Ω–∞–¥–∏', nameEn: 'Lemonades', nameDe: 'Limonaden', slug: 'lemonades', order: 8 },
  ];

  for (const cat of categories) {
    await prisma.category.upsert({
      where: { slug: cat.slug },
      update: {},
      create: cat,
    });
  }

  console.log('‚úÖ Categories seeded (8 categories)');

  // Seed 30 tables
  const appUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000';
  
  for (let i = 1; i <= 30; i++) {
    const location = i <= 20 ? 'indoor' : i <= 25 ? 'terrace' : 'bar';
    await prisma.barTable.upsert({
      where: { tableNumber: i },
      update: {},
      create: {
        tableNumber: i,
        tableName: `–ú–∞—Å–∞ ${i}`,
        capacity: i <= 25 ? 4 : 2,
        location,
        qrCodeUrl: `${appUrl}/order?table=${i}`,
      },
    });
  }

  console.log('‚úÖ Tables seeded (30 tables)');
  console.log('   - Indoor: Tables 1-20');
  console.log('   - Terrace: Tables 21-25');
  console.log('   - Bar: Tables 26-30');

  console.log('\nüéâ Seeding completed!');
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding database:');
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });


